# 作者
author = system

# 数据源
jdbc.username = root
jdbc.password = Root123456
jdbc.url = jdbc:mysql://39.101.68.161:3306/jeecg-boot?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
jdbc.driver = com.mysql.cj.jdbc.Driver

# 包配置  更改parent时同时注意更改org.jeecg.config.mybatis.MybatisPlusConfig中的包扫描配置
#         因在org.jeecg.common.aspect.DictAspect中配置了切点，所以不能配置成与切点相同的路径
#parent = org.jeecg.modules.form.generator
parent = org.jeecg.generator
# src/main/java 为固定必须有的目录
AutoGeneratorPath = /AutoGeneratorCode
#path = /AutoGeneratorCode/src/main/java

# 自动生成的表名前缀
tablePrefix = atg_

# 父类
parentEntity = org.jeecg.modules.form.entity.BaseEntity
parentController = org.jeecg.modules.form.controller.BaseController

# 输出结果类
result = org.jeecg.common.api.vo.Result

# 模板配置
tamplates.controller = /autoGeneratorTemplates/mycontroller.java.ftl
tamplates.entity = /autoGeneratorTemplates/entity.java.ftl
tamplates.xml = /autoGeneratorTemplates/mapper.xml.ftl
tamplates.mapper = /autoGeneratorTemplates/mapper.java.ftl
tamplates.service = /autoGeneratorTemplates/service.java.ftl
tamplates.serviceImpl = /autoGeneratorTemplates/serviceImpl.java.ftl

tamplates.application = /autoGeneratorTemplates/common/AutoGeneratorCodeApplication.java.ftl
tamplates.pom = /autoGeneratorTemplates/common/pom.xml.ftl
tamplates.baseController = /autoGeneratorTemplates/common/BaseController.java.ftl
tamplates.baseEntity = /autoGeneratorTemplates/common/BaseEntity.java.ftl
tamplates.result = /autoGeneratorTemplates/common/Result.java.ftl

# 编译后生成jar包的位置  根据模板pom.xml文件中的名字和版本定义
classPath = /target/classes
#jarFile = /target/AutoGeneratorCode-1.0-SNAPSHOT.jar

# Maven路径，为方便开发设置了两个路径，首选第一个路径
mavenPath1 = /usr/local/maven
mavenPath2 = D:/app/eclipse-jee-photon-R-win32-x86_64/apache-maven-3.3.9
javaHome1 = /opt/modules/jdk1.8.0_181
javaHome2 = C:/Program Files/Java/jdk1.8.0_181

# 是否开启持久化  true  false
isPersistent = true
# 持久化方式：File、GitLab
#   1、文件持久化；
#   2、GitLab持久化（条件是生产环境中项目启动时是从GitLab上拉取代码，同时需要提供相关GitLab账号信息）；
persistentMethod = File

# GitLab配置
gitlab.username = AutoGeneratorCode
gitlab.password = #!QAZ2wsx#
gitlab.http = http://39.101.64.141:8090/
# 要操作的  项目ID=用户名+"/"+项目名
#gitlab.project = AutoGeneratorCode/myproject
gitlab.project = bpt-lowcode/bpt-lowcode-backend
# 代码要上传到的文件夹目录，注：请设置MapperScanner的扫描目录下
gitlab.tree = /jeecg-boot/jeecg-boot-module-system/src/main/java/org/jeecg/generator/auto
# 设置分支
gitlab.branch = form